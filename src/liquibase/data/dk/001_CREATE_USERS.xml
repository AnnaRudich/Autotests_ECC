<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="1" author="ipo" runOnChange="true">

        <comment>Create ICs/Users</comment>

        <sql>
            declare @adminUserRights int = 14 -- admin/claims handler/supply manager
            declare @chUserRights int = 10 -- claims handler/supply manager
            declare @scalepointCompany bigint = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode = 'SCALEPOINT')

            EXEC autotests_create_settlement_column_attributes 1

            declare @SupplierId int
            EXEC autotests_create_supplier @SUNAME='Autotest-Supplier-VA-Tests', @insCompanyId = @scalepointCompany, @PostalCode = '4321', @SupplierId = @SupplierId OUTPUT, @MockUrl = '${wiremock.host}'

            update [User] set UserName = concat(UserName,'-old-',UserID) where Email = 'ecc_auto@scalepoint.com' and UserName like 'autotest-%'

            EXEC autotests_create_user @scalepointCompany, 'autotest-system', @adminUserRights
            EXEC autotests_create_user @scalepointCompany, 'autotest-sp', @adminUserRights

            -- there are no companies/fts in the range 50-60 across all the countries, so lets grab those ids
            exec autotests_prepare_future_company 50, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 51, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 52, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 53, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 54, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 55, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 56, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 57, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 58, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 59, @adminUserRights, @MockUrl = '${wiremock.host}'
            exec autotests_prepare_future_company 60, @adminUserRights, @MockUrl = '${wiremock.host}'

            declare @lb_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode like '%LB')
            EXEC autotests_fix_company_codes @lb_id, 'LB'
            EXEC autotests_create_user @lb_id, 'autotest-lb', @chUserRights

            declare @bauta_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode like '%BAUTA')
            EXEC autotests_fix_company_codes @bauta_id, 'BAUTA'
            EXEC autotests_create_user @bauta_id, 'autotest-bauta', @chUserRights

            declare @tryg_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode like '%TRYGFORSIKRING')
            EXEC autotests_fix_company_codes @tryg_id, 'TRYGFORSIKRING'
            EXEC autotests_create_user @tryg_id, 'autotest-trygfors', @chUserRights
            EXEC autotests_create_redrule 'Autotest-MusikRule', 'TRYGFORSIKRING', 'Øvrige', 'Musik, Film &amp; Spil'
            EXEC autotests_create_redruleline '36-37', 'Autotest-MusikRule', 36, 37, 10, 20, 0.2, 0, 1
            EXEC autotests_create_redrule 'Autotest-CycleRule', 'TRYGFORSIKRING', 'Cykler', 'Cykler &amp; Tilbehør'
            EXEC autotests_create_redruleline '10-71', 'Autotest-CycleRule', 10, 71, 0, 1000, 0.41, 0, 1
            EXEC autotests_create_redruleline '72-84', 'Autotest-CycleRule', 72, 84, 0, 1000, 0.47, 0, 1

            declare @tryghold_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode like '%TRYGHOLDING')
            EXEC autotests_fix_company_codes @tryghold_id, 'TRYGHOLDING'
            EXEC autotests_create_user @tryghold_id, 'autotest-trygholding', @chUserRights

            declare @alka_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode like '%ALKA')
            EXEC autotests_fix_company_codes @alka_id, 'ALKA'
            EXEC autotests_create_user @alka_id, 'autotest-alka', @chUserRights

            declare @topdanmark_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode like '%TOPDANMARK')
            EXEC autotests_fix_company_codes @topdanmark_id, 'TOPDANMARK'
            EXEC autotests_create_user @topdanmark_id, 'autotest-topdanmark', @chUserRights

            EXEC autotests_create_performance_test_users 'autotest-topdanmark', @topdanmark_id, @chUserRights, 100

        </sql>

        <sql>
            -- switch off password validation
            -- UPDATE [FUNCTEMPLATE] SET [ftUserPasswordValidationStrategy] = 2

            -- switch off password expiration
            UPDATE [FUNCTEMPLATE] SET ftfunctionflags5 = ftfunctionflags5 &amp; ~1

            -- switch off password change on first login
            UPDATE [FUNCTEMPLATE] SET ftfunctionflags5 = ftfunctionflags5 &amp; ~2

            -- disable RnV2
            UPDATE [FUNCTEMPLATE] SET [ftAutoApprovalFlag] = 0

        </sql>

        <sql>
            --enable eventAPI and UnifiedPayments for Topdanmark
            declare @topdanmark_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode = 'TOPDANMARK')
            UPDATE [dbo].[INSCOMP]
            SET eventAPIEnabled=1, unifiedPaymentsVersion = 3, eventsConfiguration='{"validationEngineEventsEnabled":true,"selfServiceEventsEnabled":true,"unifiedPaymentEventsEnabled":true,"reopenEventsEnabled":true}'
            WHERE ICRFNBR=@topdanmark_id
        </sql>

        <sql>
            --enable eventAPI and UnifiedPayments for LB
            declare @lb_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode = 'LB')
            UPDATE [dbo].[INSCOMP]
            SET eventAPIEnabled=1, unifiedPaymentsVersion = 1, eventsConfiguration='{"validationEngineEventsEnabled":true,"selfServiceEventsEnabled":true,"unifiedPaymentEventsEnabled":true,"reopenEventsEnabled":true}'
            WHERE ICRFNBR=@lb_id
        </sql>

        <sql>
            --disable audit for LB
            declare @lb_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode = 'LB')
            UPDATE [dbo].[INSCOMP]
            SET auditEnabled=0
            WHERE ICRFNBR=@lb_id
        </sql>
        <sql>
            --create choice reason for TRYG
            declare @tryghold_id int = (SELECT ICRFNBR FROM [dbo].[INSCOMP] WHERE CompanyCode = 'TRYGHOLDING')
            INSERT INTO [QA10_ECC_DK].[dbo].[ChoiceReason]([ReasonName], [ReasonType], [InsuranceCompanyId], [IsActive])
            VALUES ('Max dækning', 0, @tryghold_id, 1)
        </sql>

        <rollback/>
    </changeSet>
</databaseChangeLog>