package com.scalepoint.automation.services.externalapi.ftoggle;

import lombok.Getter;

import java.util.Arrays;
import java.util.NoSuchElementException;

public enum FeatureId {

    AUTOCAT_IN_EXCEL_IMPORT("AUTOCAT_IN_EXCEL_IMPORT"),
    DB_BLOCKING("DB_BLOCKING"),
    AUTOCAT_IN_SID("AUTOCAT_IN_SID"),
    EVOUCHER_BACKEND_SYNCHRONOUS_CALLS("EVOUCHER_BACKEND_SYNCHRONOUS_CALLS"),
    NAVISION_MANDATORY_BANK_ACCOUNT_NUMBER("NAVISION_MANDATORY_BANK_ACCOUNT_NUMBER"),
    NAVISION_MANDATORY_BANK_NAME("NAVISION_MANDATORY_BANK_NAME"),
    NAVISION_MANDATORY_BANK_REG_NUMBER("NAVISION_MANDATORY_BANK_REG_NUMBER"),
    NEW_SETTLE_WITHOUT_MAIL_BUTTON("NEW_SETTLE_WITHOUT_MAIL_BUTTON"),
    SCALEPOINT_HANDLES_VOUCHER_AVAILABLE("SCALEPOINT_HANDLES_VOUCHER_AVAILABLE"),
    SHOW_VOUCHER_RIGHT_OF_CANCELLATION("SHOW_VOUCHER_RIGHT_OF_CANCELLATION"),
    USE_ADDRESS2_IN_ORDER_XML_EMAIL("USE_ADDRESS2_IN_ORDER_XML_EMAIL"),
    USE_BING_MAPS_FOR_DISTANCES("USE_BING_MAPS_FOR_DISTANCES"),
    USE_CELL_PHONE_IN_ORDER_XML_EMAIL("USE_CELL_PHONE_IN_ORDER_XML_EMAIL"),
    USE_EXTENDED_PRODUCT_VALIDATION("USE_EXTENDED_PRODUCT_VALIDATION"),
    USE_IP1_ENCODING_FIX("USE_IP1_ENCODING_FIX"),
    USE_NEW_CATEGORY_MASTER_MESSAGE("USE_NEW_CATEGORY_MASTER_MESSAGE"),
    USE_REDEEM_INPUT_VALIDATION("USE_REDEEM_INPUT_VALIDATION"),
    USE_USERS_CACHE("USE_USERS_CACHE"),
    XFEEDS_IMPORT_DISABLED("XFEEDS_IMPORT_DISABLED"),
    COPY_NOTE_BUTTON("COPY_NOTE_BUTTON"),
    SID_ADD_BUTTON_ON_NEW_MANUAL_ITEM("SID_ADD_BUTTON_ON_NEW_MANUAL_ITEM"),
    GDPR_SENSITIVE_FIELDS_CHECK_ENABLED("GDPR_SENSITIVE_FIELDS_CHECK_ENABLED"),
    JAXBUTILS_USE_SCHEMAS("JAXBUTILS_USE_SCHEMAS"),
    SCALEPOINTID_LOGIN_ENABLED("SCALEPOINTID_LOGIN_ENABLED");

    @Getter
    private String name;

    FeatureId(String name) {

        this.name = name;
    }

    public static FeatureId getByName(String name) {

        return Arrays.stream(FeatureId.values())
                .filter(featureId -> featureId.getName().equals(name))
                .findFirst()
                .orElseThrow(() -> new NoSuchElementException(name));
    }

    public static boolean isValid(String name){

        return Arrays.stream(FeatureId.values())
                .anyMatch(featureId -> featureId.getName().equals(name));
    }
}
